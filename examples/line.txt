in ram[0] // x0
in ram[1] // y0
in ram[2] // x1
in ram[3] // y1

// reg[0] dx
// reg[1] sx
// reg[2] dy
// reg[3] sy
// reg[4] error

cmp ram[0], ram[2]
jge 4
mov reg[0], ram[2]
sub reg[0], ram[0]
mov reg[1], 1
jle 4
mov reg[0], ram[0]
sub reg[0], ram[2]
mov reg[1], -1

cmp ram[1], ram[3]
jge 4
mov reg[2], ram[1]
sub reg[2], ram[3]
mov reg[3], 1
jle 4
mov reg[2], ram[3]
sub reg[2], ram[1]
mov reg[3], -1

mov reg[4], reg[0]
add reg[4], reg[2]

out reg[0]
out reg[1]
out reg[2]
out reg[3]
out reg[4]

.l1
mov sp[0], reg[0]
mov reg[5], ram[0]
mov reg[0], ram[1]

sub reg[0], 1
cmp reg[0], 0
jle 3
add reg[5], 25
jmp -4
mov reg[0], sp[0]

mov ram[reg[5]], 1
cmp ram[0], ram[2]
jne 4
cmp ram[1], ram[3]
je 2
jmp 20
mov reg[5], reg[4]
add reg[5], reg[5]

cmp reg[5], reg[2]
jge 2
jne 6
cmp ram[0], ram[2]
jne 2
jmp 12
add reg[4], reg[2]
add ram[0], reg[1] 

cmp reg[5], reg[0]
jle 2
jne 9
cmp ram[1], ram[3]
jne 2
jmp 4
add reg[4], reg[0]
add ram[1], reg[3] 
jmp 3

in reg[0]
halt
jmp l1